/*
 * This file was automatically generated by EvoSuite
 * Sun May 14 08:35:41 GMT 2023
 */

package Model.Formulas;

import org.junit.Test;
import static org.junit.Assert.*;
import Model.Formulas.FormulaEnergia;
import Model.Formulas.FormulaMEO;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FormulaMEO_ESTest extends FormulaMEO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FormulaMEO formulaMEO0 = new FormulaMEO();
      double double0 = formulaMEO0.calculo((-1807.685), 1364.2727681563, (-1807.685), (-1807.685));
      assertEquals(4069274.6995453783, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FormulaMEO formulaMEO0 = new FormulaMEO();
      double double0 = formulaMEO0.calculo(136.2264115239179, 136.2264115239179, 136.2264115239179, 136.2264115239179);
      assertEquals(55672.905590051494, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FormulaMEO formulaMEO0 = new FormulaMEO();
      double double0 = formulaMEO0.calculo((-1.0), (-1.0), (-1.0), 1945.4845119490792);
      assertEquals((-5836.453535847238), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FormulaMEO formulaMEO0 = new FormulaMEO();
      String string0 = formulaMEO0.getId();
      assertEquals("MEO", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FormulaMEO formulaMEO0 = new FormulaMEO();
      FormulaEnergia formulaEnergia0 = formulaMEO0.clone();
      assertNotSame(formulaMEO0, formulaEnergia0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FormulaMEO formulaMEO0 = new FormulaMEO();
      double double0 = formulaMEO0.calculo((-348.34934113272), (-348.34934113272), 0.0, 0.0);
      assertEquals(-0.0, double0, 0.01);
  }
}
