/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 16 16:18:15 GMT 2023
 */

package Model.Tests;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opentest4j.AssertionFailedError;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LogTest_ESTest extends LogTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LogTest logTest0 = new LogTest();
      // Undeclared exception!
      try { 
        logTest0.testEquals();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LogTest logTest0 = new LogTest();
      logTest0.testClone();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LogTest logTest0 = new LogTest();
      logTest0.testSetDia();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LogTest logTest0 = new LogTest();
      logTest0.tearDown();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LogTest logTest0 = new LogTest();
      logTest0.setUp();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LogTest logTest0 = new LogTest();
      logTest0.testGetDia();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LogTest logTest0 = new LogTest();
      // Undeclared exception!
      try { 
        logTest0.testGetMode();
       //  fail("Expecting exception: AssertionFailedError");
       // Unstable assertion
      } catch(AssertionFailedError e) {
         //
         // expected: <null> but was: <false>
         //
         verifyException("org.junit.jupiter.api.AssertionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LogTest logTest0 = new LogTest();
      // Undeclared exception!
      try { 
        logTest0.testToString();
       //  fail("Expecting exception: AssertionFailedError");
       // Unstable assertion
      } catch(AssertionFailedError e) {
         //
         // expected: <Dia: ; Est\u00E1 ligado?: > but was: <\tDia: null; \tEst\u00E1 ligado?: false; >
         //
         verifyException("org.junit.jupiter.api.AssertionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LogTest logTest0 = new LogTest();
      logTest0.testConstrutor();
  }
}
