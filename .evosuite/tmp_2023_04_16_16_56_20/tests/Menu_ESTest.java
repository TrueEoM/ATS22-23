/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 16 16:14:43 GMT 2023
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Menu_ESTest extends Menu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Menu menu0 = new Menu(linkedList0);
      menu0.setOpcao(1946);
      linkedList0.listIterator();
      menu0.getOpcoes();
      // Undeclared exception!
      menu0.executa();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Menu menu0 = new Menu(linkedList0);
      menu0.setOpcoes(linkedList0);
      menu0.getOpcoes();
      menu0.setOpcoes(linkedList0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.addFirst("b=s");
      linkedList0.removeFirstOccurrence("b=s");
      linkedList0.add("j{zy(3L$Qc");
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.addAll(0, (Collection<? extends String>) linkedList1);
      Menu menu0 = new Menu(linkedList0);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator0);
      menu0.setOpcoes(linkedList0);
      // Undeclared exception!
      menu0.executa();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Menu menu0 = new Menu(linkedList0);
      menu0.setOpcoes(linkedList0);
      // Undeclared exception!
      menu0.executa();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      linkedList0.add("");
      linkedList0.add("\n_______________________________________________________________________________________\n");
      Menu menu0 = new Menu(linkedList0);
      linkedList0.stream();
      menu0.setOpcoes(linkedList0);
      menu0.setOpcao((-1868));
      menu0.getOpcao();
      menu0.getOpcoes();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Menu menu0 = new Menu(linkedList0);
      menu0.setOpcao(682);
      menu0.getOpcao();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      Menu menu0 = new Menu(linkedList0);
      menu0.getOpcoes();
      menu0.getOpcao();
      menu0.setOpcao(0);
      int int0 = 0;
      String string0 = "";
      linkedList0.add(",4|Hmj~!");
      int int1 = 0;
      // Undeclared exception!
      menu0.executa();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      linkedList0.offerLast(":dre]aMmlhBy',cT");
      Menu menu0 = new Menu(linkedList0);
      menu0.getOpcao();
      ArrayList<String> arrayList0 = menu0.getOpcoes();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      linkedList0.sort(comparator0);
      linkedList0.add((String) null);
      menu0.setOpcoes(arrayList0);
      // Undeclared exception!
      menu0.executa();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Menu menu0 = new Menu(linkedList0);
      menu0.setOpcao(0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      Menu menu0 = new Menu(linkedList0);
      menu0.getOpcoes();
      linkedList0.add("");
      linkedList0.add("NoBrd1|Z,`.");
      linkedList0.iterator();
      // Undeclared exception!
      menu0.executa();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      List<String> list0 = null;
      Menu menu0 = null;
      try {
        menu0 = new Menu((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
