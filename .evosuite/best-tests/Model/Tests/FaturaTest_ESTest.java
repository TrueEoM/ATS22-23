/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 16 16:17:25 GMT 2023
 */

package Model.Tests;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opentest4j.AssertionFailedError;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FaturaTest_ESTest extends FaturaTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testClone();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testEquals();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testGetIdFornecedor();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testGetNIF();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testSetConsumo();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      // Undeclared exception!
      try { 
        faturaTest0.testSetNIF();
        fail("Expecting exception: AssertionFailedError");
      
      } catch(AssertionFailedError e) {
         //
         // expected: <987654321> but was: <EDP>
         //
         verifyException("org.junit.jupiter.api.AssertionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testSetMorada();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testGetFim();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testGetInicio();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testSetInicio();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.setUp();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testGetIdFatura();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testSetValor();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testGetMorada();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testGetValor();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      // Undeclared exception!
      try { 
        faturaTest0.testToString();
        fail("Expecting exception: AssertionFailedError");
      
      } catch(AssertionFailedError e) {
         //
         // expected: <IdFatura: fatura1; IdFornecedor: EDP; NIF: 123456789; Consumo: 5.0; Valor: 10.0; Inicio: 2022-3-25 15:45; Fim: 2022-3-25 15:45;> but was: <
         // IdFatura: fatura1
         // IdFornecedor: EDP
         // NIF: 123456789
         // Consumo: 5
         // Valor: 10>
         //
         verifyException("org.junit.jupiter.api.AssertionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testSetIdFornecedor();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.tearDown();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testSetFim();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testConstrutor();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testGetConsumo();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FaturaTest faturaTest0 = new FaturaTest();
      faturaTest0.testSetIdFatura();
  }
}
