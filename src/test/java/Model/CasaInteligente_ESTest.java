/*
 * This file was automatically generated by EvoSuite
 * Sun May 14 08:13:38 GMT 2023
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.CasaInteligente;
import Model.Fatura;
import Model.Log;
import Model.SmartBulb;
import Model.SmartCamera;
import Model.SmartDevice;
import Model.SmartSpeaker;
import java.time.Clock;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CasaInteligente_ESTest extends CasaInteligente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Clock clock0 = MockClock.systemUTC();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      casaInteligente0.addFatura("]|PfFb|B``", localDateTime0, localDateTime0, 2);
      List<Fatura> list0 = casaInteligente0.getFaturas("nZlq/MxH");
      assertEquals((-605), casaInteligente0.getNIF());
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("f;iJ.*-`)@)@aZ9U", "f;iJ.*-`)@)@aZ9U", 4608, "f;iJ.*-`)@)@aZ9U", "f;iJ.*-`)@)@aZ9U");
      Clock clock0 = MockClock.systemUTC();
      Instant instant0 = MockInstant.now(clock0);
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(4608);
      LocalDateTime localDateTime0 = MockLocalDateTime.ofInstant(instant0, zoneOffset0);
      casaInteligente0.addFatura("f;iJ.*-`)@)@aZ9U", localDateTime0, (LocalDateTime) null, 4608);
      assertEquals(4608, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), " - Dispositos -> ", "A>MVj7N!ol<");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      casaInteligente1.setNIF((-242));
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals((-242), casaInteligente1.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A fatura com o id ", "A fatura com o id ", 0, "lft*wl|SpL4Q", ":j8p");
      // Undeclared exception!
      try { 
        casaInteligente0.addDeviceToRoom("lft*wl|SpL4Q", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), " - Dispositos -> ", "A>MVj7N!ol<");
      HashMap<String, Fatura> hashMap0 = new HashMap<String, Fatura>();
      casaInteligente0.setFaturas(hashMap0);
      assertEquals("A>MVj7N!ol<", casaInteligente0.getIdHome());
      assertEquals("A>MVj7N!ol<", casaInteligente0.getIdFornecedor());
      assertEquals(" - Dispositos -> ", casaInteligente0.getMorada());
      assertEquals((-2021161078), casaInteligente0.getNIF());
      assertEquals(" - Dispositos -> ", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Oy0yF\u0004(*VvV", "O Model.SmartDevice com id ", (-1), "g#cx", "jDq-=W 6[");
      SmartCamera smartCamera0 = new SmartCamera("O Model.SmartDevice com id ", true, "Oy0yF\u0004(*VvV", (-1), 0.0);
      int int0 = casaInteligente0.addDevice(smartCamera0);
      assertEquals(0, int0);
      
      casaInteligente0.setDevice("O Model.SmartDevice com id ", true);
      assertEquals((-1), casaInteligente0.getNIF());
      assertEquals("jDq-=W 6[", casaInteligente0.getIdFornecedor());
      assertEquals("g#cx", casaInteligente0.getMorada());
      assertEquals("Oy0yF\u0004(*VvV", casaInteligente0.getIdHome());
      assertEquals("O Model.SmartDevice com id ", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "zi?i! ^\"R8>Tj&", (-1626), "", "zi?i! ^\"R8>Tj&");
      casaInteligente0.addRoom("zi?i! ^\"R8>Tj&");
      casaInteligente0.addToRoom("zi?i! ^\"R8>Tj&", "");
      assertEquals("", casaInteligente0.getMorada());
      assertEquals("zi?i! ^\"R8>Tj&", casaInteligente0.getIdFornecedor());
      assertEquals((-1626), casaInteligente0.getNIF());
      assertEquals("", casaInteligente0.getIdHome());
      assertEquals("zi?i! ^\"R8>Tj&", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      casaInteligente0.addRoom((String) null);
      casaInteligente0.numeroDispositivosDivisao((String) null);
      assertEquals(2112, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("7,^>x~&Be`>[#", "7,^>x~&Be`>[#", (-3575), "7,^>x~&Be`>[#", "7,^>x~&Be`>[#");
      casaInteligente0.addRoom("7,^>x~&Be`>[#");
      casaInteligente0.addDeviceToRoom("7,^>x~&Be`>[#", "7,^>x~&Be`>[#");
      casaInteligente0.numeroDispositivos();
      assertEquals((-3575), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Model.Log", "Model.Log", (-1818), "Model.Log", "Model.Log");
      casaInteligente0.getProprietario();
      assertEquals((-1818), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-323), "'d2h-*JS`tN%", "");
      String string0 = casaInteligente0.getProprietario();
      assertEquals("'d2h-*JS`tN%", casaInteligente0.getMorada());
      assertEquals("", casaInteligente0.getIdHome());
      assertEquals("", casaInteligente0.getIdFornecedor());
      assertEquals((-323), casaInteligente0.getNIF());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), "A>MVj7N!ol<", "A>MVj7N!ol<");
      casaInteligente0.setNIF(0);
      int int0 = casaInteligente0.getNIF();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-578), "", "");
      casaInteligente0.setNIF(2);
      int int0 = casaInteligente0.getNIF();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("&]smd=)^7T", "&]smd=)^7T", 1074, (String) null, "zB<l_x9");
      String string0 = casaInteligente0.getMorada();
      assertEquals(1074, casaInteligente0.getNIF());
      assertEquals("zB<l_x9", casaInteligente0.getIdFornecedor());
      assertNull(string0);
      assertEquals("&]smd=)^7T", casaInteligente0.getProprietario());
      assertEquals("&]smd=)^7T", casaInteligente0.getIdHome());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", " j\u00E1 existe", 2025, "", "----------------------------------------------------------------");
      String string0 = casaInteligente0.getMorada();
      assertEquals("----------------------------------------------------------------", casaInteligente0.getIdFornecedor());
      assertEquals("", casaInteligente0.getIdHome());
      assertEquals(2025, casaInteligente0.getNIF());
      assertEquals(" j\u00E1 existe", casaInteligente0.getProprietario());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("n9-c\"/8gC2HSR,dw", "ID: ", 0, "ID: ", "|Jb55}'_-d8K#g9cSv0");
      HashMap<String, List<Log>> hashMap0 = new HashMap<String, List<Log>>();
      LinkedList<Log> linkedList0 = new LinkedList<Log>();
      hashMap0.put("ID: ", linkedList0);
      casaInteligente0.setLogs(hashMap0);
      casaInteligente0.getLogs();
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("ID: ", casaInteligente0.getMorada());
      assertEquals("ID: ", casaInteligente0.getProprietario());
      assertEquals("|Jb55}'_-d8K#g9cSv0", casaInteligente0.getIdFornecedor());
      assertEquals("n9-c\"/8gC2HSR,dw", casaInteligente0.getIdHome());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(" j\u00E1 existe", "I8C'ez'1", 3, "I8C'ez'1", "~_xT/");
      casaInteligente0.addRoom("");
      casaInteligente0.getLocations();
      assertEquals(3, casaInteligente0.getNIF());
      assertEquals("~_xT/", casaInteligente0.getIdFornecedor());
      assertEquals("I8C'ez'1", casaInteligente0.getMorada());
      assertEquals("I8C'ez'1", casaInteligente0.getProprietario());
      assertEquals(" j\u00E1 existe", casaInteligente0.getIdHome());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 0, "", "");
      casaInteligente0.setIdHome((String) null);
      casaInteligente0.getIdHome();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("(", "A", (-888), "A", "(");
      String string0 = casaInteligente0.getIdHome();
      assertEquals((-888), casaInteligente0.getNIF());
      assertEquals("(", string0);
      assertEquals("(", casaInteligente0.getIdFornecedor());
      assertEquals("A", casaInteligente0.getMorada());
      assertEquals("A", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(")>8aJI1u\".|~K[PZ", "", 1026, "", (String) null);
      String string0 = casaInteligente0.getIdFornecedor();
      assertEquals("", casaInteligente0.getProprietario());
      assertEquals(")>8aJI1u\".|~K[PZ", casaInteligente0.getIdHome());
      assertEquals("", casaInteligente0.getMorada());
      assertNull(string0);
      assertEquals(1026, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("b/", "b/", (-605), "b/", "b/");
      casaInteligente0.getIdFornecedor();
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      casaInteligente0.addFatura("", localDateTime0, localDateTime0, 40);
      casaInteligente0.getFaturas();
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("I", "I", 14, "I", "I");
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("I", false, 14, "I", "I", 14);
      int int0 = casaInteligente0.addDevice(smartSpeaker0);
      assertEquals(0, int0);
      
      casaInteligente0.getDevices();
      assertEquals(14, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("7,^>x~&Be`>[#", "7,^>x~&Be`>[#", (-3575), "7,^>x~&Be`>[#", "7,^>x~&Be`>[#");
      SmartBulb smartBulb0 = new SmartBulb("7,^>x~&Be`>[#", "K6", true, (-3575), 0.0);
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      casaInteligente0.getDevice("7,^>x~&Be`>[#");
      assertEquals((-3575), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", "A>MVj7N!ol<", (-2021161045), "A>MVj7N!ol<", "A>MVj7N!ol<");
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("A>MVj7N!ol<", true, (-2021161045), "A>MVj7N!ol<", "a/t", (-2021161045));
      int int0 = casaInteligente0.addDevice(smartSpeaker0);
      assertEquals(0, int0);
      
      casaInteligente0.getDevice("A>MVj7N!ol<");
      assertEquals((-2021161045), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("lUTOpSMfC~BbNM", " - Dispositos -> ", 0, "lUTOpSMfC~BbNM", "Fornecedor: ");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals("lUTOpSMfC~BbNM", casaInteligente1.getMorada());
      assertEquals("lUTOpSMfC~BbNM", casaInteligente1.getIdHome());
      assertEquals("Fornecedor: ", casaInteligente1.getIdFornecedor());
      assertEquals(" - Dispositos -> ", casaInteligente1.getProprietario());
      assertEquals(0, casaInteligente1.getNIF());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("(", "A", (-888), "A", "(");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals("A", casaInteligente1.getMorada());
      assertEquals("A", casaInteligente1.getProprietario());
      assertEquals((-888), casaInteligente0.getNIF());
      assertEquals((-888), casaInteligente1.getNIF());
      assertEquals("(", casaInteligente1.getIdHome());
      assertEquals("(", casaInteligente1.getIdFornecedor());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(" j\u00E1 existe", "I8C'ez'1", 3, "I8C'ez'1", "~_xT/");
      HashMap<String, List<Log>> hashMap0 = new HashMap<String, List<Log>>();
      hashMap0.put((String) null, (List<Log>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.setLogs(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("L|TP", ")J0%Q>", 47, ")J0%Q>", "L|TP");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      hashMap0.put("", (List<String>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.setLocations(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", " j\u00E1 existe", 2025, "", "----------------------------------------------------------------");
      HashMap<String, SmartCamera> hashMap0 = new HashMap<String, SmartCamera>();
      HashMap<String, SmartDevice> hashMap1 = new HashMap<String, SmartDevice>(hashMap0);
      hashMap1.put("#.##", (SmartDevice) null);
      // Undeclared exception!
      try { 
        casaInteligente0.setDevices(hashMap1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), " - Dispositos -> ", "A>MVj7N!ol<");
      // Undeclared exception!
      try { 
        casaInteligente0.setAlldivision(true, ":kc>LW}5k8B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        CasaInteligente.parseCasa("M2Ae:azKF,E$Zb8,,*");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"E$Zb8\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      // Undeclared exception!
      try { 
        CasaInteligente.parseCasa((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("KY", "KY", (-2021161078), (String) null, "KY");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      // Undeclared exception!
      try { 
        casaInteligente1.equals(casaInteligente0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      casaInteligente0.addRoom((String) null);
      // Undeclared exception!
      try { 
        casaInteligente0.addToRoom((String) null, (SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Clock clock0 = MockClock.systemUTC();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      // Undeclared exception!
      try { 
        casaInteligente0.addLog(localDateTime0, "&83sOWf0m", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, "", 1440, (String) null, (String) null);
      // Undeclared exception!
      try { 
        casaInteligente0.addLog("", (Log) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), "A>MVj7N!ol<", "A>MVj7N!ol<");
      // Undeclared exception!
      try { 
        casaInteligente0.addDevice((SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CasaInteligente casaInteligente0 = null;
      try {
        casaInteligente0 = new CasaInteligente((CasaInteligente) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      boolean boolean0 = casaInteligente0.hasFatura("pT}?'l/Y];");
      assertEquals((-605), casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      casaInteligente0.addRoom((String) null);
      SmartBulb smartBulb0 = new SmartBulb("", "", 2112, 2112);
      casaInteligente0.addToRoom((String) null, (SmartDevice) smartBulb0);
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      double double0 = casaInteligente0.calculaConsumo(localDateTime0, localDateTime0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(2112, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("(fYinXV", "ks4=`A'PjvY", 4, "igy&gCtU +Wx@", "ks4=`A'PjvY");
      SmartCamera smartCamera0 = new SmartCamera("igy&gCtU +Wx@", "(fYinXV", 3125.41473, 1.7);
      int int0 = casaInteligente0.addDevice(smartCamera0);
      assertEquals(0, int0);
      
      casaInteligente0.getDevice("igy&gCtU +Wx@");
      assertEquals("ks4=`A'PjvY", casaInteligente0.getProprietario());
      assertEquals("igy&gCtU +Wx@", casaInteligente0.getMorada());
      assertEquals("(fYinXV", casaInteligente0.getIdHome());
      assertEquals("ks4=`A'PjvY", casaInteligente0.getIdFornecedor());
      assertEquals(4, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(" j\u00E1 existe", "I8C'ez'1", 3, "I8C'ez'1", "~_xT/");
      casaInteligente0.addRoom("");
      casaInteligente0.removeDevicesFromRoom("I8C'ez'1");
      assertEquals("I8C'ez'1", casaInteligente0.getMorada());
      assertEquals(3, casaInteligente0.getNIF());
      assertEquals("~_xT/", casaInteligente0.getIdFornecedor());
      assertEquals(" j\u00E1 existe", casaInteligente0.getIdHome());
      assertEquals("I8C'ez'1", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      casaInteligente0.addRoom("");
      casaInteligente0.roomHasDevice("", "");
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      casaInteligente0.roomHasDevice("", "");
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-578), "", "");
      casaInteligente0.existsDeviceHome("]|PfFb|B``");
      assertEquals((-578), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      SmartBulb smartBulb0 = new SmartBulb("", "I", true, (-2029), (-2029));
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      casaInteligente0.existsDeviceHome("");
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-578), "", "");
      int int0 = casaInteligente0.getNIF();
      assertEquals((-578), int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-578), "", "");
      casaInteligente0.getIdFornecedor();
      assertEquals((-578), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", (String) null, 0, "", (String) null);
      String string0 = casaInteligente0.getProprietario();
      assertNull(string0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(" j\u00E1 existe", "I8C'ez'1", 3, "I8C'ez'1", "~_xT/");
      casaInteligente0.getFaturas();
      assertEquals("~_xT/", casaInteligente0.getIdFornecedor());
      assertEquals(3, casaInteligente0.getNIF());
      assertEquals("I8C'ez'1", casaInteligente0.getMorada());
      assertEquals("I8C'ez'1", casaInteligente0.getProprietario());
      assertEquals(" j\u00E1 existe", casaInteligente0.getIdHome());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 0, "", "");
      casaInteligente0.getIdHome();
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "\tDimensao: ", 0, "", "");
      Map<String, SmartDevice> map0 = casaInteligente0.getDevices();
      casaInteligente0.setDevices(map0);
      assertEquals("\tDimensao: ", casaInteligente0.getProprietario());
      assertEquals("", casaInteligente0.getMorada());
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("", casaInteligente0.getIdFornecedor());
      assertEquals("", casaInteligente0.getIdHome());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("L|TP", ")J0%Q>", 47, ")J0%Q>", "L|TP");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      casaInteligente0.setLocations(hashMap0);
      assertEquals(47, casaInteligente0.getNIF());
      assertEquals("L|TP", casaInteligente0.getIdHome());
      assertEquals("L|TP", casaInteligente0.getIdFornecedor());
      assertEquals(")J0%Q>", casaInteligente0.getMorada());
      assertEquals(")J0%Q>", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("&]smd=)^7T", "&]smd=)^7T", 1074, (String) null, "zB<l_x9");
      casaInteligente0.getLogs();
      assertEquals(1074, casaInteligente0.getNIF());
      assertEquals("&]smd=)^7T", casaInteligente0.getIdHome());
      assertEquals("&]smd=)^7T", casaInteligente0.getProprietario());
      assertEquals("zB<l_x9", casaInteligente0.getIdFornecedor());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("&]smd=)^7T", "&]smd=)^7T", 1074, (String) null, "zB<l_x9");
      casaInteligente0.getLocations();
      assertEquals("&]smd=)^7T", casaInteligente0.getIdHome());
      assertEquals("&]smd=)^7T", casaInteligente0.getProprietario());
      assertEquals("zB<l_x9", casaInteligente0.getIdFornecedor());
      assertEquals(1074, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "{ID%>ax&Yu@=rT-2|", (-2150), "{ID%>ax&Yu@=rT-2|", "{ID%>ax&Yu@=rT-2|");
      String string0 = casaInteligente0.getMorada();
      assertEquals("{ID%>ax&Yu@=rT-2|", casaInteligente0.getIdFornecedor());
      assertEquals("{ID%>ax&Yu@=rT-2|", casaInteligente0.getProprietario());
      assertEquals("{ID%>ax&Yu@=rT-2|", string0);
      assertEquals("", casaInteligente0.getIdHome());
      assertEquals((-2150), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), "A>MVj7N!ol<", "A>MVj7N!ol<");
      // Undeclared exception!
      try { 
        casaInteligente0.setFaturas((Map<String, Fatura>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("q#PDw", "----------------------Divis\u00E3o/Dispositivos----------------------", 891, "q#PDw", ".t9mZ.\u0002Ar.");
      try { 
        casaInteligente0.removeLog("----------------------Divis\u00E3o/Dispositivos----------------------");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // N\u00E3o existem logs no device ----------------------Divis\u00E3o/Dispositivos----------------------
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Model.SmartDevice", "Model.SmartDevice", 0, "Model.SmartDevice", "Model.SmartDevice");
      HashMap<String, List<Log>> hashMap0 = new HashMap<String, List<Log>>();
      LinkedList<Log> linkedList0 = new LinkedList<Log>();
      hashMap0.put("`:vM<g7rVKS\"j", linkedList0);
      casaInteligente0.setLogs(hashMap0);
      casaInteligente0.removeLog("`:vM<g7rVKS\"j");
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      Log log0 = new Log();
      casaInteligente0.addLog("", log0);
      casaInteligente0.addLog(localDateTime0, "", false);
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("b/", "b/", (-605), "b/", "b/");
      Log log0 = new Log();
      casaInteligente0.addLog("b/", log0);
      casaInteligente0.addLog("b/", log0);
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Clock clock0 = MockClock.systemUTC();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      Log log0 = new Log();
      log0.setDia(localDateTime0);
      casaInteligente0.addLog("", log0);
      boolean boolean0 = casaInteligente0.hasLogByDevice("", log0);
      assertTrue(boolean0);
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      Log log0 = new Log();
      log0.setDia(localDateTime0);
      casaInteligente0.addLog("", log0);
      Log log1 = new Log();
      boolean boolean0 = casaInteligente0.hasLogByDevice("", log1);
      assertEquals((-605), casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Log log0 = new Log();
      boolean boolean0 = casaInteligente0.hasLogByDevice("\nID Home: \nMorada: \nFornecedor: \nProprietario: \nNIF: -605\n----------------------Divis\u00E3o/Dispositivos----------------------\n----------------------------------------------------------------", log0);
      assertFalse(boolean0);
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Log log0 = new Log();
      casaInteligente0.addLog("", log0);
      // Undeclared exception!
      try { 
        casaInteligente0.hasLogByDevice("", log0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Log log0 = new Log();
      casaInteligente0.addLog("", log0);
      boolean boolean0 = casaInteligente0.hasLog("");
      assertEquals((-605), casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      boolean boolean0 = casaInteligente0.hasLog("");
      assertFalse(boolean0);
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      casaInteligente0.addFatura("\nID Home: \nMorada: \nFornecedor: \nProprietario: \nNIF: -605\n----------------------Divis\u00E3o/Dispositivos----------------------\n----------------------------------------------------------------", localDateTime0, localDateTime0, (-1));
      List<Fatura> list0 = casaInteligente0.getFaturas("");
      assertTrue(list0.isEmpty());
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Clock clock0 = MockClock.systemUTC();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      casaInteligente0.addFatura("", localDateTime0, localDateTime0, (-605));
      List<Fatura> list0 = casaInteligente0.getFaturas("");
      assertEquals((-605), casaInteligente0.getNIF());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      try { 
        casaInteligente0.removeFatura("(VQC,$`6");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A fatura com o id (VQC,$`6 n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("K>n'7'!ol<", "K>n'7'!ol<", 3025, "K>n'7'!ol<", "K>n'7'!ol<");
      SmartBulb smartBulb0 = new SmartBulb("K>n'7'!ol<", "K>n'7'!ol<", false, 3025, 0);
      try { 
        casaInteligente0.addToRoom("K>n'7'!ol<", (SmartDevice) smartBulb0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A divisao K>n'7'!ol< n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("\nValor: ", "", (-1982292596), "I", "^#)KVr3tQ28;");
      try { 
        casaInteligente0.getDevice("'U-z@O8<edN>1R");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O Model.SmartDevice com id 'U-z@O8<edN>1R n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      SmartBulb smartBulb0 = new SmartBulb("", "I", true, (-2029), (-2029));
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      int int1 = casaInteligente0.addDevice(smartBulb0);
      assertEquals((-605), casaInteligente0.getNIF());
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("|CqsWffm", "|CqsWffm", (-2021161078), "|CqsWffm", "|CqsWffm");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      casaInteligente0.setIdFornecedor("qZsOWPnf");
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("@{Eu~lYU&U", "@{Eu~lYU&U", (-2021161078), " j\u00E1 existe", "@{Eu~lYU&U");
      CasaInteligente casaInteligente1 = new CasaInteligente(" j\u00E1 existe", "@{Eu~lYU&U", (-2021161078), "@{Eu~lYU&U", "@{Eu~lYU&U");
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals("@{Eu~lYU&U", casaInteligente1.getIdFornecedor());
      assertEquals("@{Eu~lYU&U", casaInteligente1.getProprietario());
      assertEquals("@{Eu~lYU&U", casaInteligente0.getIdFornecedor());
      assertFalse(boolean0);
      assertEquals((-2021161078), casaInteligente1.getNIF());
      assertEquals("@{Eu~lYU&U", casaInteligente0.getProprietario());
      assertEquals(" j\u00E1 existe", casaInteligente1.getIdHome());
      assertEquals("@{Eu~lYU&U", casaInteligente1.getMorada());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", "A>MVj7N!ol<", (-1752), "A>MVj7N!ol<", "A>MVj7N!ol<");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      casaInteligente0.setNIF(0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals(0, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Lsqfm", "Lsqfm", (-2021161077), "CqsW~", "Lsqfm");
      CasaInteligente casaInteligente1 = new CasaInteligente("CqsW~", "CqsW~", (-2021161077), "Lsqfm", "Lsqfm");
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals("CqsW~", casaInteligente0.getMorada());
      assertEquals("Lsqfm", casaInteligente0.getIdFornecedor());
      assertEquals((-2021161077), casaInteligente1.getNIF());
      assertEquals("Lsqfm", casaInteligente1.getIdFornecedor());
      assertEquals("CqsW~", casaInteligente1.getIdHome());
      assertFalse(boolean0);
      assertEquals("CqsW~", casaInteligente1.getProprietario());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), "A>MVj7N!ol<", "A>MVj7N!ol<");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(".t9mZ.\u0002Ar.", false, (-2021161078), (String) null, "a/t", 0.0);
      casaInteligente1.addDevice(smartSpeaker0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), "A>MVj7N!ol<", "A>MVj7N!ol<");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      casaInteligente1.addRoom("CqsOWffm");
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("K>n'7'!ol<", "K>n'7'!ol<", (-2021161091), "K>n'7'!ol<", "K>n'7'!ol<");
      CasaInteligente casaInteligente1 = new CasaInteligente("K>n'7'!ol<", "K>n'7'!ol<", (-2021161091), "K>n'7'!ol<", "K>n'7'!ol<");
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertTrue(boolean0);
      assertEquals((-2021161091), casaInteligente1.getNIF());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("|CqsWffm", "|CqsWffm", (-2021161078), "|CqsWffm", "|CqsWffm");
      boolean boolean0 = casaInteligente0.equals((Object) null);
      assertEquals((-2021161078), casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", "A>MVj7N!ol<", (-404202382), "A>MVj7N!ol<", "A>MVj7N!ol<");
      boolean boolean0 = casaInteligente0.equals(casaInteligente0);
      assertEquals((-404202382), casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      boolean boolean0 = casaInteligente0.equals("");
      assertFalse(boolean0);
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      casaInteligente0.addRoom("");
      SmartBulb smartBulb0 = new SmartBulb("", "YA>MDj7JTol<", true, 2112, 2112);
      casaInteligente0.addToRoom("", (SmartDevice) smartBulb0);
      casaInteligente0.removeDevicesFromRoom("");
      assertEquals(2112, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      casaInteligente0.addRoom("");
      SmartSpeaker smartSpeaker0 = new SmartSpeaker("", false, 2112, "", "", 2112);
      int int0 = casaInteligente0.addDevice(smartSpeaker0);
      assertEquals(0, int0);
      
      SmartBulb smartBulb0 = new SmartBulb("", "YA>MDj7JTol<", true, 2112, 2112);
      casaInteligente0.addToRoom("", (SmartDevice) smartBulb0);
      assertEquals(2112, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      SmartBulb smartBulb0 = new SmartBulb("", "I", true, (-2029), (-2029));
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      boolean boolean0 = casaInteligente0.hasDevice("");
      assertEquals((-605), casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      boolean boolean0 = casaInteligente0.hasDevice("L.J-+");
      assertFalse(boolean0);
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Model.SmartDevice", "Model.SmartDevice", 0, "Model.SmartDevice", "Model.SmartDevice");
      // Undeclared exception!
      try { 
        casaInteligente0.addToRoom("\tDia: ", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      casaInteligente0.addRoom((String) null);
      boolean boolean0 = casaInteligente0.hasRoom((String) null);
      assertEquals(2112, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      boolean boolean0 = casaInteligente0.hasRoom("YA>MDj7JTol<");
      assertEquals(2112, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      casaInteligente0.addRoom((String) null);
      SmartBulb smartBulb0 = new SmartBulb("", "", 2112, (-413.0));
      casaInteligente0.addToRoom((String) null, (SmartDevice) smartBulb0);
      boolean boolean0 = casaInteligente0.checksAllrooms("");
      assertTrue(boolean0);
      assertEquals(2112, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      boolean boolean0 = casaInteligente0.checksAllrooms("");
      assertEquals((-605), casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      casaInteligente0.addRoom("");
      SmartBulb smartBulb0 = new SmartBulb("", "YA>MDj7JTol<", true, 2112, 2112);
      casaInteligente0.addToRoom("", (SmartDevice) smartBulb0);
      casaInteligente0.setAlldivision(true, "");
      assertEquals(2112, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Lsqfm", "Lsqfm", (-2021161077), "CqsW~", "Lsqfm");
      try { 
        casaInteligente0.setDeviceOff("CqsW~");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O Model.SmartDevice com id CqsW~ n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(".geEl3", ".geEl3", (-1923), ".geEl3", ".geEl3");
      SmartCamera smartCamera0 = new SmartCamera(".geEl3", ".geEl3", (-1923), (-1923));
      int int0 = casaInteligente0.addDevice(smartCamera0);
      assertEquals(0, int0);
      
      casaInteligente0.setDeviceOff(".geEl3");
      assertEquals((-1923), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("@{Eu~lYU&U", "@{Eu~lYU&U", (-2021161078), " j\u00E1 existe", "@{Eu~lYU&U");
      try { 
        casaInteligente0.setDeviceOn(" j\u00E1 existe");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O Model.SmartDevice com id  j\u00E1 existe n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      SmartBulb smartBulb0 = new SmartBulb("", "I", true, (-2029), 0.0);
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      casaInteligente0.setDeviceOn("");
      assertEquals((-605), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      String string0 = casaInteligente0.toString();
      assertEquals("\nID Home: \nMorada: \nFornecedor: \nProprietario: \nNIF: -605\n----------------------Divis\u00E3o/Dispositivos----------------------\n----------------------------------------------------------------", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("NSFw!zX>%", "Model.Exceptions.LogNotExistsException", (-56), "NSFw!zX>%", "Model.Exceptions.LogNotExistsException");
      casaInteligente0.numeroDispositivos();
      assertEquals("Model.Exceptions.LogNotExistsException", casaInteligente0.getIdFornecedor());
      assertEquals("Model.Exceptions.LogNotExistsException", casaInteligente0.getProprietario());
      assertEquals("NSFw!zX>%", casaInteligente0.getIdHome());
      assertEquals("NSFw!zX>%", casaInteligente0.getMorada());
      assertEquals((-56), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), "A>MVj7N!ol<", "A>MVj7N!ol<");
      // Undeclared exception!
      try { 
        casaInteligente0.setDevice("A>MVj7N!ol<", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("`Bn\"BCVV-?Y8yQ~", "`Bn\"BCVV-?Y8yQ~", (-26), "`Bn\"BCVV-?Y8yQ~", "`Bn\"BCVV-?Y8yQ~");
      // Undeclared exception!
      try { 
        casaInteligente0.numeroDispositivosDivisao("`Bn\"BCVV-?Y8yQ~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      // Undeclared exception!
      try { 
        CasaInteligente.parseCasa("%Fornecedor: ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("A>MVj7N!ol<", " - Dispositos -> ", (-2021161078), "A>MVj7N!ol<", "A>MVj7N!ol<");
      casaInteligente0.removeDeviceFromHome("TTM");
      assertEquals("A>MVj7N!ol<", casaInteligente0.getIdHome());
      assertEquals("A>MVj7N!ol<", casaInteligente0.getMorada());
      assertEquals(" - Dispositos -> ", casaInteligente0.getProprietario());
      assertEquals((-2021161078), casaInteligente0.getNIF());
      assertEquals("A>MVj7N!ol<", casaInteligente0.getIdFornecedor());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Model.SmartDevice", "Model.SmartDevice", 0, "Model.SmartDevice", "Model.SmartDevice");
      casaInteligente0.setMorada("`:vM<g7rVKS\"j");
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("7,^>x~&Be`>[#", "7,^>x~&Be`>[#", (-3575), "7,^>x~&Be`>[#", "7,^>x~&Be`>[#");
      casaInteligente0.setallDevices(true);
      assertEquals((-3575), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-605), "", "");
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      casaInteligente0.addFatura("]|PfFb|B``", localDateTime0, localDateTime0, 2);
      // Undeclared exception!
      try { 
        casaInteligente0.getFaturas((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Model.SmartDevice", "Model.SmartDevice", 0, "Model.SmartDevice", "Model.SmartDevice");
      casaInteligente0.setProprietario("\tDia: ");
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("lUTOpSMfC~BbNM", " - Dispositos -> ", 0, "lUTOpSMfC~BbNM", "Fornecedor: ");
      Map<String, SmartDevice> map0 = casaInteligente0.getDevices();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      CasaInteligente casaInteligente1 = null;
      try {
        casaInteligente1 = new CasaInteligente("u", "u", map0, hashMap0, 0, "u", " - Dispositos -> ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2112, "", "");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(2112, casaInteligente1.getNIF());
      assertEquals(2112, casaInteligente0.getNIF());
  }
}
