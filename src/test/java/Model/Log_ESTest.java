/*
 * This file was automatically generated by EvoSuite
 * Sun May 14 08:24:30 GMT 2023
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Log;
import java.time.Clock;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Log_ESTest extends Log_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      Boolean boolean0 = new Boolean(true);
      Log log0 = new Log(localDateTime0, boolean0);
      Boolean boolean1 = log0.getMode();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Log log0 = new Log();
      Boolean boolean0 = log0.getMode();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Boolean boolean0 = new Boolean("");
      Log log0 = new Log(localDateTime0, boolean0);
      LocalDateTime localDateTime1 = log0.getDia();
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Log log0 = null;
      try {
        log0 = new Log((Log) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Log log0 = new Log();
      log0.getDia();
      assertFalse(log0.getMode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      Boolean boolean0 = new Boolean(true);
      Log log0 = new Log(localDateTime0, boolean0);
      Log log1 = new Log(log0);
      assertTrue(log1.equals((Object)log0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Log log0 = new Log((LocalDateTime) null, (Boolean) null);
      Boolean boolean0 = log0.getMode();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = Boolean.TRUE;
      Log log0 = new Log(localDateTime0, boolean0);
      Log log1 = new Log(localDateTime0, boolean0);
      boolean boolean1 = log1.equals(log0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = Boolean.TRUE;
      Log log0 = new Log(localDateTime0, boolean0);
      Log log1 = new Log();
      log1.setDia(localDateTime0);
      boolean boolean1 = log1.equals(log0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = Boolean.TRUE;
      Log log0 = new Log(localDateTime0, boolean0);
      Log log1 = new Log();
      boolean boolean1 = log0.equals(log1);
      assertFalse(log1.getMode());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = Boolean.TRUE;
      Log log0 = new Log(localDateTime0, boolean0);
      boolean boolean1 = log0.equals(boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Log log0 = new Log();
      boolean boolean0 = log0.equals((Object) null);
      assertFalse(log0.getMode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = Boolean.TRUE;
      Log log0 = new Log(localDateTime0, boolean0);
      boolean boolean1 = log0.equals(log0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = Boolean.TRUE;
      Log log0 = new Log(localDateTime0, boolean0);
      Log log1 = new Log();
      // Undeclared exception!
      try { 
        log1.equals(log0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = Boolean.TRUE;
      Log log0 = new Log(localDateTime0, boolean0);
      Log log1 = log0.clone();
      assertTrue(log1.equals((Object)log0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Log log0 = new Log();
      String string0 = log0.toString();
      assertEquals("\tDia: null; \tEst\u00E1 ligado?: false; ", string0);
  }
}
