/*
 * This file was automatically generated by EvoSuite
 * Wed May 10 16:51:58 GMT 2023
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import Model.Pedido;
import java.time.Clock;
import java.time.LocalDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Pedido_ESTest extends Pedido_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, (String) null, (String) null, (String) null, (String) null, true);
      pedido0.getTipo();
      assertTrue(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Pedido pedido0 = new Pedido(localDateTime0, "", "", "", "", false);
      pedido0.getTipo();
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, "", "", "", "", false);
      boolean boolean0 = pedido0.getMode();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Pedido pedido0 = new Pedido(localDateTime0, (String) null, (String) null, "`|1=\"fSAo2~!%=)", (String) null, true);
      String string0 = pedido0.getId();
      assertTrue(pedido0.getMode());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, "Q06SP59nU_u=ZK-j%", "", "", "", false);
      String string0 = pedido0.getId();
      assertEquals("", pedido0.getFuncao());
      assertEquals("Q06SP59nU_u=ZK-j%", pedido0.getTipo());
      assertFalse(pedido0.getMode());
      assertEquals("", string0);
      assertEquals("", pedido0.getEspecificacoes());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, (String) null, (String) null, (String) null, (String) null, true);
      pedido0.getFuncao();
      assertTrue(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ", funcao='", "", "", "", false);
      String string0 = pedido0.getFuncao();
      assertEquals(", funcao='", pedido0.getTipo());
      assertFalse(pedido0.getMode());
      assertEquals("", pedido0.getId());
      assertEquals("", pedido0.getEspecificacoes());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      Pedido pedido0 = new Pedido(localDateTime0, "tF)@.FoE)17g", "tF)@.FoE)17g", ", id='", (String) null, true);
      String string0 = pedido0.getEspecificacoes();
      assertTrue(pedido0.getMode());
      assertEquals("tF)@.FoE)17g", pedido0.getTipo());
      assertEquals("tF)@.FoE)17g", pedido0.getId());
      assertEquals(", id='", pedido0.getFuncao());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, "", "", "", "", false);
      pedido0.getEspecificacoes();
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      Pedido pedido0 = new Pedido(localDateTime0, "tF)@.FoE)17g", "tF)@.FoE)17g", ", id='", (String) null, true);
      pedido0.getDate();
      assertEquals("tF)@.FoE)17g", pedido0.getTipo());
      assertEquals(", id='", pedido0.getFuncao());
      assertTrue(pedido0.getMode());
      assertEquals("tF)@.FoE)17g", pedido0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.getFuncao();
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.setId(")MLU%+i't4");
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.getTipo();
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.setEspecificacoes(")MLU%+i't4");
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.setMode(false);
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, "#rEtGt@?PaR89@!", "#rEtGt@?PaR89@!", "#rEtGt@?PaR89@!", "#rEtGt@?PaR89@!", true);
      pedido0.setDate((LocalDateTime) null);
      assertTrue(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.getDate();
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      String string0 = pedido0.toString();
      assertEquals("Pedido{date=null, tipo=')MLU%+i't4', id=')MLU%+i't4', funcao=')MLU%+i't4', especificacoes=')MLU%+i't4', mode=false}", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.setTipo(")MLU%+i't4");
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.getId();
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, "#rEtGt@?PaR89@!", "#rEtGt@?PaR89@!", "#rEtGt@?PaR89@!", "#rEtGt@?PaR89@!", true);
      boolean boolean0 = pedido0.getMode();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.getEspecificacoes();
      assertFalse(pedido0.getMode());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Pedido pedido0 = new Pedido((LocalDateTime) null, ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", ")MLU%+i't4", false);
      pedido0.setFuncao(")MLU%+i't4");
      assertFalse(pedido0.getMode());
  }
}
