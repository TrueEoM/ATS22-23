/*
 * This file was automatically generated by EvoSuite
 * Wed May 10 16:50:01 GMT 2023
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.SmartCamera;
import Model.SmartDevice;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartCamera_ESTest extends SmartCamera_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("%\"", true, "%\"", 952.8465897914053, 1434.8617972086122);
      SmartCamera smartCamera1 = new SmartCamera("%\"", "%\"", 1434.8617972086122, 1434.8617972086122);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertFalse(smartCamera1.equals((Object)smartCamera0));
      assertFalse(boolean0);
      assertEquals(1434.8617972086122, smartCamera1.getTamanho(), 0.01);
      assertEquals(952.8465897914053, smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("w", "Q", 0.0, 0.0);
      double double0 = smartCamera0.getTamanho();
      assertEquals("Q", smartCamera0.getResolucao());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(";", ";", (-4.576282885843437), (-4.576282885843437));
      double double0 = smartCamera0.getTamanho();
      assertEquals((-4.576282885843437), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, false, (String) null, 0.0, 0.0);
      smartCamera0.getResolucao();
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("", true, "", 0.0, 0.0);
      smartCamera0.getResolucao();
      assertEquals(0.0, smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(".8rc}Yk6zfJZ72vO5%", true, ".8rc}Yk6zfJZ72vO5%", 887.7034, 0.0);
      SmartCamera smartCamera1 = (SmartCamera)smartCamera0.clone();
      assertEquals(887.7034, smartCamera1.getTamanho(), 0.01);
      assertEquals(887.7034, smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartCamera.parseSmartCamera((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.SmartCamera", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartCamera.parseSmartCamera("0lnoT[");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("Model.SmartCamera", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("\tConsumo Base: ", "\tConsumo Base: ", (-1026.329127), (-1026.329127));
      smartCamera0.setResolucao((String) null);
      SmartDevice smartDevice0 = smartCamera0.clone();
      // Undeclared exception!
      try { 
        smartCamera0.equals(smartDevice0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("", "L` Ub[Ru,'(l", (-1.0), (-1.0));
      // Undeclared exception!
      try { 
        smartCamera0.consumoDiario();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"` Ub[Ru,'(\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, false, (String) null, (-1428.785), (-1428.785));
      // Undeclared exception!
      try { 
        smartCamera0.consumoDiario();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.SmartCamera", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(";", ";", (-4.576282885843437), (-4.576282885843437));
      smartCamera0.setResolucao("55(");
      // Undeclared exception!
      try { 
        smartCamera0.consumoDiario();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("Model.SmartCamera", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartCamera smartCamera0 = null;
      try {
        smartCamera0 = new SmartCamera((SmartCamera) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(".8rc}Yk6zfJZ72vO5%", true, ".8rc}Yk6zfJZ72vO5%", 887.7034, 0.0);
      SmartCamera smartCamera1 = new SmartCamera(smartCamera0);
      assertEquals(887.7034, smartCamera0.getTamanho(), 0.01);
      assertEquals(887.7034, smartCamera1.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(".8rc}Yk6zfJZ72vO5%", true, ".8rc}Yk6zfJZ72vO5%", 887.7034, 0.0);
      double double0 = smartCamera0.getTamanho();
      assertEquals(887.7034, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("2%z~,Im1g+mL]OiqR", true, (String) null, 1.0, 1.0);
      smartCamera0.setTamanho(1.0);
      assertEquals(1.0, smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, true, "\n", (-1055.324), (-1055.324));
      String string0 = smartCamera0.getResolucao();
      assertEquals((-1055.324), smartCamera0.getTamanho(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("6,>!`~aaT2}o", "64>!`~aaT2}o", 1.0, 1.0);
      SmartCamera smartCamera1 = (SmartCamera)smartCamera0.clone();
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(1.0, smartCamera0.getTamanho(), 0.01);
      assertEquals("64>!`~aaT2}o", smartCamera1.getResolucao());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("6,>!`~aaT2}o", "64>!`~aaT2}o", 1.0, 1.0);
      SmartCamera smartCamera1 = new SmartCamera("6,>!`~aaT2}o", "6,>!`~aaT2}o", 1.0, 1.0);
      boolean boolean0 = smartCamera1.equals(smartCamera0);
      assertFalse(boolean0);
      assertEquals(1.0, smartCamera1.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("{_", true, "_jBX-@!", 975.71286803556, 1.0);
      SmartCamera smartCamera1 = new SmartCamera("{_", "_jBX-@!", 1.0, 1.0);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals("_jBX-@!", smartCamera1.getResolucao());
      assertEquals("_jBX-@!", smartCamera0.getResolucao());
      assertFalse(smartCamera1.equals((Object)smartCamera0));
      assertEquals(1.0, smartCamera1.getTamanho(), 0.01);
      assertEquals(975.71286803556, smartCamera0.getTamanho(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("-4)gc9T?^,N,", "-4)gc9T?^,N,", 952.3078453932233, 952.3078453932233);
      Object object0 = new Object();
      boolean boolean0 = smartCamera0.equals(object0);
      assertEquals(952.3078453932233, smartCamera0.getTamanho(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("idFN{Z^9//3dr8R o", false, "idFN{Z^9//3dr8R o", 1427.0660897415432, 1409.622366638468);
      boolean boolean0 = smartCamera0.equals((Object) null);
      assertEquals(1427.0660897415432, smartCamera0.getTamanho(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("w", "w", (-0.3692), (-0.3692));
      boolean boolean0 = smartCamera0.equals(smartCamera0);
      assertTrue(boolean0);
      assertEquals((-0.3692), smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera("w", "w", (-0.3692), (-0.3692));
      SmartCamera smartCamera1 = new SmartCamera("j)>K}8_CqKpWA.+`(r7", true, "j)>K}8_CqKpWA.+`(r7", (-0.3692), (-1780.610449));
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertFalse(boolean0);
      assertEquals((-0.3692), smartCamera1.getTamanho(), 0.01);
      assertEquals((-0.3692), smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, false, (String) null, (-1428.785), (-1428.785));
      String string0 = smartCamera0.toString();
      assertEquals("ID: null\n\tOn: false;\n\tConsumo Base: -1428.785;\n\tTamanho: -1428.785Mb ; \tResolu\u00E7\u00E3o: null;\n", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, false, (String) null, (-1428.785), (-1428.785));
      smartCamera0.turnCameraOff();
      assertEquals((-1428.785), smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((String) null, false, (String) null, (-1428.785), (-1428.785));
      smartCamera0.turnCameraOn();
      assertEquals((-1428.785), smartCamera0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartCamera.parseSmartCamera("ID: -4)gc9T?^,N,\n\tOn: false;\n\tConsumo Base: 952.3078453932233;\n\tTamanho: 952.3078453932233Mb ; \tResolu\u00E7\u00E3o: -4)gc9T?^,N,;\n");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera(";", ";", (-4.576282885843437), (-4.576282885843437));
      // Undeclared exception!
      try { 
        smartCamera0.consumoDiario();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
