/*
 * This file was automatically generated by EvoSuite
 * Wed May 10 16:48:40 GMT 2023
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.CasaInteligente;
import Model.Fatura;
import Model.Log;
import Model.SmartBulb;
import Model.SmartCamera;
import Model.SmartDevice;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CasaInteligente_ESTest extends CasaInteligente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("( J", "Model.Exceptions.SmartDeviceAlreadyExistsException", 0, "", "nw@O8");
      casaInteligente0.addFatura("", (LocalDateTime) null, (LocalDateTime) null, 0);
      List<Fatura> list0 = casaInteligente0.getFaturas("nw@O8");
      assertEquals("Model.Exceptions.SmartDeviceAlreadyExistsException", casaInteligente0.getProprietario());
      assertEquals("( J", casaInteligente0.getIdHome());
      assertEquals("nw@O8", casaInteligente0.getIdFornecedor());
      assertEquals("", casaInteligente0.getMorada());
      assertEquals(0, casaInteligente0.getNIF());
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("( J", "Model.Exceptions.SmartDeviceAlreadyExistsException", 0, "", "nw@O8");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      casaInteligente0.addFatura("l%G=Q@ ", (LocalDateTime) null, localDateTime0, 0.0);
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("nw@O8", casaInteligente0.getIdFornecedor());
      assertEquals("( J", casaInteligente0.getIdHome());
      assertEquals("", casaInteligente0.getMorada());
      assertEquals("Model.Exceptions.SmartDeviceAlreadyExistsException", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2106116, "", "");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      casaInteligente1.setNIF(554);
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertEquals(554, casaInteligente1.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("W(ax", "W(ax", 0, "W(ax", "W(ax");
      SmartCamera smartCamera0 = new SmartCamera("W(ax", "W(ax", 0, (-433.863131471578));
      int int0 = casaInteligente0.addDevice(smartCamera0);
      assertEquals(0, int0);
      
      casaInteligente0.setDevice("W(ax", true);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("%:DU`GN{mK4eK:k");
      SmartBulb smartBulb0 = new SmartBulb("%:DU`GN{mK4eK:k", "Fornecedor: ", false, 0, 0);
      casaInteligente0.addToRoom("%:DU`GN{mK4eK:k", (SmartDevice) smartBulb0);
      casaInteligente0.setAlldivision(true, "%:DU`GN{mK4eK:k");
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("Fornecedor: ", casaInteligente0.getMorada());
      assertEquals("Fornecedor: ", casaInteligente0.getIdFornecedor());
      assertEquals("Fornecedor: ", casaInteligente0.getIdHome());
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 15, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("%:DU`GN{mK4eK:k");
      casaInteligente0.addToRoom("%:DU`GN{mK4eK:k", "O device ");
      assertEquals("Fornecedor: ", casaInteligente0.getIdFornecedor());
      assertEquals(15, casaInteligente0.getNIF());
      assertEquals("Fornecedor: ", casaInteligente0.getMorada());
      assertEquals("Fornecedor: ", casaInteligente0.getIdHome());
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("Fornecedor: ");
      casaInteligente0.numeroDispositivosDivisao("Fornecedor: ");
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("Fornecedor: ");
      casaInteligente0.addDeviceToRoom("Fornecedor: ", "Fornecedor: ");
      casaInteligente0.numeroDispositivosDivisao("Fornecedor: ");
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("%:DU`GN{mK4eK:k");
      casaInteligente0.addDeviceToRoom("%:DU`GN{mK4eK:k", "%:DU`GN{mK4eK:k");
      casaInteligente0.numeroDispositivos();
      assertEquals("Fornecedor: ", casaInteligente0.getMorada());
      assertEquals("Fornecedor: ", casaInteligente0.getIdFornecedor());
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente0.getProprietario());
      assertEquals("Fornecedor: ", casaInteligente0.getIdHome());
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, (String) null, (-2105376123), (String) null, "n-)?Z%z~w");
      String string0 = casaInteligente0.getProprietario();
      assertEquals((-2105376123), casaInteligente0.getNIF());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      casaInteligente0.setProprietario("\nID Home: \nMorada: \nFornecedor: \nProprietario: \nNIF: 4\n----------------------Divis\u00E3o/Dispositivos----------------------\n----------------------------------------------------------------");
      casaInteligente0.getProprietario();
      assertEquals(4, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 0, "Dp3<LECRIi!pnm", "");
      int int0 = casaInteligente0.getNIF();
      assertEquals("", casaInteligente0.getProprietario());
      assertEquals(0, int0);
      assertEquals("", casaInteligente0.getIdHome());
      assertEquals("", casaInteligente0.getIdFornecedor());
      assertEquals("Dp3<LECRIi!pnm", casaInteligente0.getMorada());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("<eZkQ29", "Model.Exceptions.SmartDeviceNotExistsException", (-290), "^|g=$`p9", "/!u}*[Vu");
      int int0 = casaInteligente0.getNIF();
      assertEquals("<eZkQ29", casaInteligente0.getIdHome());
      assertEquals("^|g=$`p9", casaInteligente0.getMorada());
      assertEquals("/!u}*[Vu", casaInteligente0.getIdFornecedor());
      assertEquals((-290), int0);
      assertEquals("Model.Exceptions.SmartDeviceNotExistsException", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, "RL_p&tw.p_O_O;k", 4, (String) null, "");
      String string0 = casaInteligente0.getMorada();
      assertEquals("RL_p&tw.p_O_O;k", casaInteligente0.getProprietario());
      assertEquals("", casaInteligente0.getIdFornecedor());
      assertEquals(4, casaInteligente0.getNIF());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("[Vh+ju]I", "", 746, "", "Model.SmartCamera");
      String string0 = casaInteligente0.getMorada();
      assertEquals("[Vh+ju]I", casaInteligente0.getIdHome());
      assertEquals("Model.SmartCamera", casaInteligente0.getIdFornecedor());
      assertEquals(746, casaInteligente0.getNIF());
      assertEquals("", string0);
      assertEquals("", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      Log log0 = new Log();
      casaInteligente0.addLog("", log0);
      casaInteligente0.getLogs();
      assertEquals(4, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("%:DU`GN{mK4eK:k");
      casaInteligente0.getLocations();
      assertEquals("Fornecedor: ", casaInteligente0.getIdHome());
      assertEquals("Fornecedor: ", casaInteligente0.getIdFornecedor());
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("Fornecedor: ", casaInteligente0.getMorada());
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, "O dispositivo j\u00E1 existe nesta divis\u00E3o da casa", 2955, "", (String) null);
      String string0 = casaInteligente0.getIdHome();
      assertEquals("", casaInteligente0.getMorada());
      assertEquals(2955, casaInteligente0.getNIF());
      assertEquals("O dispositivo j\u00E1 existe nesta divis\u00E3o da casa", casaInteligente0.getProprietario());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-735), "Kjkq<_j!#98j.;s=", "Model.Exceptions.LogAlreadyExistsException");
      String string0 = casaInteligente0.getIdHome();
      assertEquals("Model.Exceptions.LogAlreadyExistsException", casaInteligente0.getIdFornecedor());
      assertEquals((-735), casaInteligente0.getNIF());
      assertEquals("Kjkq<_j!#98j.;s=", casaInteligente0.getMorada());
      assertEquals("", string0);
      assertEquals("", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("x", "", 1901, "", (String) null);
      String string0 = casaInteligente0.getIdFornecedor();
      assertEquals("", casaInteligente0.getProprietario());
      assertEquals(1901, casaInteligente0.getNIF());
      assertEquals("", casaInteligente0.getMorada());
      assertNull(string0);
      assertEquals("x", casaInteligente0.getIdHome());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("i\"dSw>uf p-Ih", "DzznD", 4609, "i\"dSw>uf p-Ih", "");
      String string0 = casaInteligente0.getIdFornecedor();
      assertEquals("DzznD", casaInteligente0.getProprietario());
      assertEquals("i\"dSw>uf p-Ih", casaInteligente0.getIdHome());
      assertEquals("i\"dSw>uf p-Ih", casaInteligente0.getMorada());
      assertEquals(4609, casaInteligente0.getNIF());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      Instant instant0 = MockInstant.ofEpochSecond(2072L);
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDateTime localDateTime0 = MockLocalDateTime.ofInstant(instant0, zoneOffset0);
      casaInteligente0.addFatura(">j5aPccJDG5lQE", localDateTime0, localDateTime0, 1L);
      casaInteligente0.getFaturas();
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("ImlpW>[+IUH6JO<", "&=>t(%3G:$_", 811, "", "");
      SmartBulb smartBulb0 = new SmartBulb("V=sb", "&=>t(%3G:$_", true, 0, 0.0);
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      casaInteligente0.getDevices();
      assertEquals("", casaInteligente0.getMorada());
      assertEquals("&=>t(%3G:$_", casaInteligente0.getProprietario());
      assertEquals("ImlpW>[+IUH6JO<", casaInteligente0.getIdHome());
      assertEquals("", casaInteligente0.getIdFornecedor());
      assertEquals(811, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("W(ax", "Model.Exceptions.SmartDeviceAlreadyExistsException", 0, "W(ax", "nw@O8");
      SmartCamera smartCamera0 = new SmartCamera("Model.Exceptions.SmartDeviceAlreadyExistsException", "nw@O8", 0, (-433.863131471578));
      smartCamera0.setConsumoBase(2447.0);
      int int0 = casaInteligente0.addDevice(smartCamera0);
      assertEquals(0, int0);
      
      casaInteligente0.getDevice("Model.Exceptions.SmartDeviceAlreadyExistsException");
      assertEquals("Model.Exceptions.SmartDeviceAlreadyExistsException", casaInteligente0.getProprietario());
      assertEquals("W(ax", casaInteligente0.getIdHome());
      assertEquals("nw@O8", casaInteligente0.getIdFornecedor());
      assertEquals("W(ax", casaInteligente0.getMorada());
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("W(ax", "W(ax", 0, "W(ax", "nw@O8");
      SmartCamera smartCamera0 = new SmartCamera("W(ax", "nw@O8", 0, (-433.863131471578));
      int int0 = casaInteligente0.addDevice(smartCamera0);
      assertEquals(0, int0);
      
      casaInteligente0.getDevice("W(ax");
      assertEquals("nw@O8", casaInteligente0.getIdFornecedor());
      assertEquals("W(ax", casaInteligente0.getProprietario());
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("W(ax", casaInteligente0.getMorada());
      assertEquals("W(ax", casaInteligente0.getIdHome());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals("Fornecedor: ", casaInteligente1.getIdHome());
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente1.getProprietario());
      assertEquals("Fornecedor: ", casaInteligente1.getMorada());
      assertEquals(0, casaInteligente1.getNIF());
      assertEquals("", casaInteligente1.getIdFornecedor());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-735), "Kjkq<_j!#98j.;s=", "Model.Exceptions.LogAlreadyExistsException");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals((-735), casaInteligente1.getNIF());
      assertEquals("", casaInteligente1.getIdHome());
      assertEquals((-735), casaInteligente0.getNIF());
      assertEquals("Model.Exceptions.LogAlreadyExistsException", casaInteligente1.getIdFornecedor());
      assertEquals("Kjkq<_j!#98j.;s=", casaInteligente1.getMorada());
      assertEquals("", casaInteligente1.getProprietario());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("40X+o7IH", "", 2, "", "^'V@uft>G}+i,");
      // Undeclared exception!
      try { 
        casaInteligente0.setLogs((Map<String, List<Log>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", (-735), "Kjkq<_j!#98j.;s=", "Model.Exceptions.LogAlreadyExistsException");
      // Undeclared exception!
      try { 
        casaInteligente0.setLocations((Map<String, List<String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(" xbF", " xbF", 476, "2OOg%Iq,a", (String) null);
      HashMap<String, Fatura> hashMap0 = new HashMap<String, Fatura>();
      hashMap0.put(" xbF", (Fatura) null);
      // Undeclared exception!
      try { 
        casaInteligente0.setFaturas(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("W(ax", "Model.Exceptions.SmartDeviceAlreadyExistsException", 0, "", "nw@O8");
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      hashMap0.put("W(ax", (SmartDevice) null);
      // Undeclared exception!
      try { 
        casaInteligente0.setDevices(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("2`I^}yy7X[%D.Iy\"", "2`I^}yy7X[%D.Iy\"", (-2884), "", "Model.Exceptions.RoomNotExistsException");
      // Undeclared exception!
      try { 
        casaInteligente0.setAlldivision(true, "Model.Exceptions.RoomNotExistsException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      // Undeclared exception!
      try { 
        CasaInteligente.parseCasa("9,'H,,`6");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"'H\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      // Undeclared exception!
      try { 
        CasaInteligente.parseCasa((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("mq", "Model.Exceptions.SmartDeviceAlreadyExistsException", 0, "mq", "Model.Exceptions.SmartDeviceAlreadyExistsException");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      // Undeclared exception!
      try { 
        casaInteligente0.numberDevicesOn(localDateTime0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      Log log0 = new Log();
      casaInteligente0.addLog("", log0);
      // Undeclared exception!
      try { 
        casaInteligente0.hasLogByDevice("", log0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Log", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      Instant instant0 = MockInstant.ofEpochSecond(2072L);
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDateTime localDateTime0 = MockLocalDateTime.ofInstant(instant0, zoneOffset0);
      casaInteligente0.addFatura(">j5aPccJDG5lQE", localDateTime0, localDateTime0, 1L);
      // Undeclared exception!
      try { 
        casaInteligente0.getFaturas((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, (String) null, (-2105376123), (String) null, "n-)?Z%z~w");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      // Undeclared exception!
      try { 
        casaInteligente0.equals(casaInteligente1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("%:DU`GN{mK4eK:k");
      // Undeclared exception!
      try { 
        casaInteligente0.addToRoom("%:DU`GN{mK4eK:k", (SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("YARF}}S3U8'2*P]", "YARF}}S3U8'2*P]", 2579, "YARF}}S3U8'2*P]", "}$");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      // Undeclared exception!
      try { 
        casaInteligente0.addLog(localDateTime0, "YARF}}S3U8'2*P]", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("7ey7ky", "7ey7ky", 1237, ",", "7ey7ky");
      // Undeclared exception!
      try { 
        casaInteligente0.addLog("7ey7ky", (Log) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("x8}3*CmP--", "x8}3*CmP--", 1281, "%S", "%S");
      // Undeclared exception!
      try { 
        casaInteligente0.addDevice((SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CasaInteligente casaInteligente0 = null;
      try {
        casaInteligente0 = new CasaInteligente((CasaInteligente) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("KU/jW\"G{l{$b&3", "", 39, "", "N\u00E3o existem logs no device ");
      casaInteligente0.hasLog("");
      assertEquals(39, casaInteligente0.getNIF());
      assertEquals("N\u00E3o existem logs no device ", casaInteligente0.getIdFornecedor());
      assertEquals("KU/jW\"G{l{$b&3", casaInteligente0.getIdHome());
      assertEquals("", casaInteligente0.getMorada());
      assertEquals("", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      Log log0 = new Log();
      casaInteligente0.addLog("", log0);
      casaInteligente0.hasLog("");
      assertEquals(4, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      boolean boolean0 = casaInteligente0.hasFatura("");
      assertFalse(boolean0);
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2106116, "", "");
      try { 
        casaInteligente0.getDevice("\nID Home: \nMorada: \nFornecedor: \nProprietario: \nNIF: 2106116\n----------------------Divis\u00E3o/Dispositivos----------------------\n----------------------------------------------------------------");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O Model.SmartDevice com id 
         // ID Home: 
         // Morada: 
         // Fornecedor: 
         // Proprietario: 
         // NIF: 2106116
         // ----------------------Divis\u00E3o/Dispositivos----------------------
         // ---------------------------------------------------------------- n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "");
      casaInteligente0.addRoom("");
      casaInteligente0.addDeviceToRoom("%:DU`GN{mK4eK:k", "");
      casaInteligente0.removeDevicesFromRoom("%:DU`GN{mK4eK:k");
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("", casaInteligente0.getIdFornecedor());
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente0.getProprietario());
      assertEquals("Fornecedor: ", casaInteligente0.getMorada());
      assertEquals("Fornecedor: ", casaInteligente0.getIdHome());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("%:DU`GN{mK4eK:k");
      casaInteligente0.roomHasDevice("%:DU`GN{mK4eK:k", "Fornecedor: ");
      assertEquals("Fornecedor: ", casaInteligente0.getMorada());
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente0.getProprietario());
      assertEquals("Fornecedor: ", casaInteligente0.getIdHome());
      assertEquals("Fornecedor: ", casaInteligente0.getIdFornecedor());
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      casaInteligente0.roomHasDevice("", "");
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      casaInteligente0.existsDeviceHome("");
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("KU/jW\"G{l{$b&3", "", 39, "", "N\u00E3o existem logs no yevice ");
      SmartBulb smartBulb0 = new SmartBulb("", "", (-977), 0.0);
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      casaInteligente0.existsDeviceHome("");
      assertEquals(39, casaInteligente0.getNIF());
      assertEquals("N\u00E3o existem logs no yevice ", casaInteligente0.getIdFornecedor());
      assertEquals("KU/jW\"G{l{$b&3", casaInteligente0.getIdHome());
      assertEquals("", casaInteligente0.getMorada());
      assertEquals("", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      int int0 = casaInteligente0.getNIF();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 0, (String) null, "OKsLd<DC . P%I>6=");
      String string0 = casaInteligente0.getIdFornecedor();
      assertEquals("", casaInteligente0.getIdHome());
      assertNotNull(string0);
      assertEquals("OKsLd<DC . P%I>6=", string0);
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      casaInteligente0.getProprietario();
      assertEquals(4, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("#.0#", "#.0#", (-1), "Model.SmartSpeaker", "#.0#");
      Map<String, List<Log>> map0 = (Map<String, List<Log>>)casaInteligente0.getLogs();
      casaInteligente0.setLogs(map0);
      assertEquals("Model.SmartSpeaker", casaInteligente0.getMorada());
      assertEquals("#.0#", casaInteligente0.getIdHome());
      assertEquals((-1), casaInteligente0.getNIF());
      assertEquals("#.0#", casaInteligente0.getIdFornecedor());
      assertEquals("#.0#", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      casaInteligente0.getFaturas();
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Model.SmartBulb$Mode", "Model.SmartBulb$Mode", (-1), "", "YE");
      String string0 = casaInteligente0.getIdHome();
      assertEquals("YE", casaInteligente0.getIdFornecedor());
      assertEquals("Model.SmartBulb$Mode", string0);
      assertEquals("Model.SmartBulb$Mode", casaInteligente0.getProprietario());
      assertEquals((-1), casaInteligente0.getNIF());
      assertEquals("", casaInteligente0.getMorada());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      Map<String, List<String>> map0 = (Map<String, List<String>>)casaInteligente0.getLocations();
      casaInteligente0.setLocations(map0);
      assertEquals(4, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("lD=EbGn:e", "lD=EbGn:e", (-1915738387), "lD=EbGn:e", "lD=EbGn:e");
      Map<String, SmartDevice> map0 = casaInteligente0.getDevices();
      casaInteligente0.setDevices(map0);
      assertEquals((-1915738387), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "Fornecedor: ");
      String string0 = casaInteligente0.getMorada();
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("Fornecedor: ", string0);
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente0.getProprietario());
      assertEquals("Fornecedor: ", casaInteligente0.getIdHome());
      assertEquals("Fornecedor: ", casaInteligente0.getIdFornecedor());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      Log log0 = new Log();
      casaInteligente0.addLog("", log0);
      casaInteligente0.removeLog("");
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("YARF}}S3U8'2*P]", "YARF}}S3U8'2*P]", (-265), "YARF}}S3U8'2*P]", "YARF}}S3U8'2*P]");
      Log log0 = new Log();
      casaInteligente0.addLog("YARF}}S3U8'2*P]", log0);
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      casaInteligente0.addLog(localDateTime0, "YARF}}S3U8'2*P]", false);
      assertEquals((-265), casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      Log log0 = new Log();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      log0.setDia(localDateTime0);
      casaInteligente0.addLog("", log0);
      boolean boolean0 = casaInteligente0.hasLogByDevice("", log0);
      assertEquals(4, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      Log log0 = new Log();
      boolean boolean0 = casaInteligente0.hasLogByDevice((String) null, log0);
      assertEquals(4, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      Log log0 = new Log();
      casaInteligente0.addLog("", log0);
      boolean boolean0 = casaInteligente0.hasLogByDevice("", (Log) null);
      assertFalse(boolean0);
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "Fornecedor: ");
      try { 
        casaInteligente0.removeLog("Fornecedor: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // N\u00E3o existem logs no device Fornecedor: 
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("YARF}}S3U8'2*P]", "YARF}}S3U8'2*P]", 2579, "YARF}}S3U8'2*P]", "YARF}}S3U8'2*P]");
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      casaInteligente0.addFatura("YARF}}S3U8'2*P]", localDateTime0, localDateTime0, (-27));
      List<Fatura> list0 = casaInteligente0.getFaturas("");
      assertEquals(0, list0.size());
      assertEquals(2579, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      HashMap<String, Fatura> hashMap0 = new HashMap<String, Fatura>();
      Fatura fatura0 = new Fatura();
      hashMap0.put("m5%w{;V", fatura0);
      casaInteligente0.setFaturas(hashMap0);
      boolean boolean0 = casaInteligente0.hasFatura("m5%w{;V");
      assertTrue(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("ImlpW>[+IUH6JO<", "&=>t(%3G:$_", 811, "", "");
      try { 
        casaInteligente0.removeFatura("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A fatura com o id  n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("v]P[;p7f[CDf+*2z", "v]P[;p7f[CDf+*2z", 0, "v]P[;p7f[CDf+*2z", "v]P[;p7f[CDf+*2z");
      Log log0 = new Log();
      casaInteligente0.addLog("v]P[;p7f[CDf+*2z", log0);
      casaInteligente0.addLog("v]P[;p7f[CDf+*2z", log0);
      SmartCamera smartCamera0 = new SmartCamera("v]P[;p7f[CDf+*2z", "v]P[;p7f[CDf+*2z", 0, (-433.863131471578));
      casaInteligente0.addDevice(smartCamera0);
      // Undeclared exception!
      try { 
        casaInteligente0.addFatura("v]P[;p7f[CDf+*2z", (LocalDateTime) null, (LocalDateTime) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("v]P[;p7f[CDf+*2z", "v]P[;p7f[CDf+*2z", 0, "v]P[;p7f[CDf+*2z", "v]P[;p7f[CDf+*2z");
      Log log0 = new Log();
      casaInteligente0.addLog("v]P[;p7f[CDf+*2z", log0);
      SmartCamera smartCamera0 = new SmartCamera("v]P[;p7f[CDf+*2z", "v]P[;p7f[CDf+*2z", 0, (-433.863131471578));
      casaInteligente0.addDevice(smartCamera0);
      // Undeclared exception!
      try { 
        casaInteligente0.addFatura("v]P[;p7f[CDf+*2z", (LocalDateTime) null, (LocalDateTime) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      SmartBulb smartBulb0 = new SmartBulb("Fornecedor: ", "O device ", false, 0, 0);
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);
      LocalDateTime localDateTime0 = MockLocalDateTime.ofEpochSecond(0, 1, zoneOffset0);
      double double0 = casaInteligente0.calculaConsumo(localDateTime0, localDateTime0);
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("Fornecedor: ");
      SmartBulb smartBulb0 = new SmartBulb("Fornecedor: ", "Fornecedor: ", false, 0, 0);
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      casaInteligente0.addToRoom("Fornecedor: ", (SmartDevice) smartBulb0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("KU/jW\"G{l{$b&3", "Fornecedor: ", 39, "", "N\u00E3o existem logs no yevice ");
      SmartCamera smartCamera0 = new SmartCamera("", (String) null, 39, 0.0);
      try { 
        casaInteligente0.addToRoom("Fornecedor: ", (SmartDevice) smartCamera0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A divisao Fornecedor:  n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      SmartBulb smartBulb0 = new SmartBulb("\nID Home: \nMorada: \nFornecedor: \nProprietario: \nNIF: 2\n----------------------Divis\u00E3o/Dispositivos----------------------\n----------------------------------------------------------------", ">j5aPccJDG5lQE", 2, 0.0);
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      casaInteligente0.getDevice("\nID Home: \nMorada: \nFornecedor: \nProprietario: \nNIF: 2\n----------------------Divis\u00E3o/Dispositivos----------------------\n----------------------------------------------------------------");
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("Fornecedor: ");
      SmartBulb smartBulb0 = new SmartBulb("Fornecedor: ", "Model.CasaInteligente", 0, 0);
      casaInteligente0.addToRoom("Fornecedor: ", (SmartDevice) smartBulb0);
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(1, int0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("F2rivcehdorW:", "F2rivcehdorW:", 4, "F2rivcehdorW:", "F2rivcehdorW:");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      casaInteligente1.setIdFornecedor("@)},f^Jwh#p2z");
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertEquals(4, casaInteligente0.getNIF());
      assertTrue(casaInteligente0.equals((Object)casaInteligente1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2106116, "", "");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      casaInteligente0.setNIF(542);
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertEquals(542, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("ZWnq&ni`r*'g1Z", "ZWnq&ni`r*'g1Z", 19, "ZWnq&ni`r*'g1Z", "ZWnq&ni`r*'g1Z");
      CasaInteligente casaInteligente1 = new CasaInteligente("ZWnq&ni`r*'g1Z", "-@^dEc'T{R4Y=Y", 19, "ZWnq&ni`r*'g1Z", "ZWnq&ni`r*'g1Z");
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals("ZWnq&ni`r*'g1Z", casaInteligente1.getIdHome());
      assertFalse(boolean0);
      assertEquals("ZWnq&ni`r*'g1Z", casaInteligente1.getIdFornecedor());
      assertEquals("ZWnq&ni`r*'g1Z", casaInteligente1.getMorada());
      assertEquals(19, casaInteligente1.getNIF());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "6:DU`GNxmK4eK:k", 15, "Fornecedor: ", "Fornecedor: ");
      CasaInteligente casaInteligente1 = new CasaInteligente("Fornecedor: ", "6:DU`GNxmK4eK:k", 15, "jmf6dF0|6", "jmf6dF0|6");
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals("Fornecedor: ", casaInteligente1.getIdHome());
      assertEquals(15, casaInteligente1.getNIF());
      assertEquals("jmf6dF0|6", casaInteligente1.getMorada());
      assertEquals("6:DU`GNxmK4eK:k", casaInteligente1.getProprietario());
      assertFalse(boolean0);
      assertEquals("jmf6dF0|6", casaInteligente1.getIdFornecedor());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("Fornecedor: ");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      SmartBulb smartBulb0 = new SmartBulb("Fornecedor: ", "Fornecedor: ", false, 0, 0);
      casaInteligente1.addToRoom("Fornecedor: ", (SmartDevice) smartBulb0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("KU/jW\"G{l{$b&3", "Fornecedor: ", 39, "", "N\u00E3o existem logs no yevice ");
      boolean boolean0 = casaInteligente0.equals("Fornecedor: ");
      assertEquals("KU/jW\"G{l{$b&3", casaInteligente0.getIdHome());
      assertEquals("", casaInteligente0.getMorada());
      assertFalse(boolean0);
      assertEquals("N\u00E3o existem logs no yevice ", casaInteligente0.getIdFornecedor());
      assertEquals("Fornecedor: ", casaInteligente0.getProprietario());
      assertEquals(39, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      boolean boolean0 = casaInteligente0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(4, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      boolean boolean0 = casaInteligente0.equals(casaInteligente0);
      assertEquals(0, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      SmartBulb smartBulb0 = new SmartBulb("Fornecedor: ", "Fornecedor: ", false, 0, 0);
      casaInteligente1.addDevice(smartBulb0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("Fornecedor: ");
      SmartBulb smartBulb0 = new SmartBulb("Fornecedor: ", "Model.CasaInteligente", 0, 0);
      casaInteligente0.addToRoom("Fornecedor: ", (SmartDevice) smartBulb0);
      boolean boolean0 = casaInteligente0.roomHasDevice("Fornecedor: ", "Fornecedor: ");
      assertEquals(0, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("KU/jW\"G{l{$b&3", "Fornecedor: ", 39, "", "N\u00E3o existem logs no yevice ");
      SmartBulb smartBulb0 = new SmartBulb("", "@", (-977), 0.0);
      int int0 = casaInteligente0.addDevice(smartBulb0);
      assertEquals(0, int0);
      
      boolean boolean0 = casaInteligente0.hasDevice("");
      assertEquals("Fornecedor: ", casaInteligente0.getProprietario());
      assertTrue(boolean0);
      assertEquals("", casaInteligente0.getMorada());
      assertEquals("KU/jW\"G{l{$b&3", casaInteligente0.getIdHome());
      assertEquals(39, casaInteligente0.getNIF());
      assertEquals("N\u00E3o existem logs no yevice ", casaInteligente0.getIdFornecedor());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      boolean boolean0 = casaInteligente0.hasDevice("Fornecedor: ");
      assertEquals(0, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "6:DU`GNxmK4eK:k", 15, "Fornecedor: ", "Fornecedor: ");
      // Undeclared exception!
      try { 
        casaInteligente0.addToRoom("/E;j", "O device ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("Fornecedor: ");
      boolean boolean0 = casaInteligente0.hasRoom("Fornecedor: ");
      assertTrue(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("mq", "Model.Exceptions.SmartDeviceAlreadyExistsException", 0, "mq", "Model.Exceptions.SmartDeviceAlreadyExistsException");
      boolean boolean0 = casaInteligente0.hasRoom("VMjz)");
      assertEquals("Model.Exceptions.SmartDeviceAlreadyExistsException", casaInteligente0.getProprietario());
      assertEquals("mq", casaInteligente0.getMorada());
      assertEquals("mq", casaInteligente0.getIdHome());
      assertFalse(boolean0);
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("Model.Exceptions.SmartDeviceAlreadyExistsException", casaInteligente0.getIdFornecedor());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("Fornecedor: ");
      SmartBulb smartBulb0 = new SmartBulb("Fornecedor: ", "Model.CasaInteligente", 0, 0);
      casaInteligente0.addToRoom("Fornecedor: ", (SmartDevice) smartBulb0);
      boolean boolean0 = casaInteligente0.checksAllrooms("Fornecedor: ");
      assertEquals(0, casaInteligente0.getNIF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2106116, "", "");
      boolean boolean0 = casaInteligente0.checksAllrooms("");
      assertEquals(2106116, casaInteligente0.getNIF());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Foec(edor: ", "Foec(edor: ", 0, "Foec(edor: ", "Foec(edor: ");
      casaInteligente0.addRoom("Foec(edor: ");
      casaInteligente0.addDeviceToRoom((String) null, "Foec(edor: ");
      try { 
        casaInteligente0.setAlldivision(true, "Foec(edor: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O Model.SmartDevice com id null n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Wh]\b", "Wh]\b", 0, "Wh]\b", "Wh]\b");
      try { 
        casaInteligente0.setDeviceOff("Wh]\b");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O Model.SmartDevice com id Wh]\b n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("mq", "Model.Exceptions.SmartDeviceAlreadyExistsException", 0, "mq", "Model.Exceptions.SmartDeviceAlreadyExistsException");
      SmartCamera smartCamera0 = new SmartCamera("Model.Exceptions.SmartDeviceAlreadyExistsException", "mq", 0, 0);
      int int0 = casaInteligente0.addDevice(smartCamera0);
      assertEquals(0, int0);
      
      casaInteligente0.setDeviceOff("Model.Exceptions.SmartDeviceAlreadyExistsException");
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("Model.Exceptions.SmartDeviceAlreadyExistsException", casaInteligente0.getProprietario());
      assertEquals("Model.Exceptions.SmartDeviceAlreadyExistsException", casaInteligente0.getIdFornecedor());
      assertEquals("mq", casaInteligente0.getIdHome());
      assertEquals("mq", casaInteligente0.getMorada());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      try { 
        casaInteligente0.setDeviceOn("m5%w{;V");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O Model.SmartDevice com id m5%w{;V n\u00E3o existe
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "Fornecedor: ", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.addRoom("Fornecedor: ");
      SmartBulb smartBulb0 = new SmartBulb("Fornecedor: ", "Model.CasaInteligente", 0, 0);
      casaInteligente0.addToRoom("Fornecedor: ", (SmartDevice) smartBulb0);
      casaInteligente0.setDeviceOn("Fornecedor: ");
      assertEquals(0, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      String string0 = casaInteligente0.toString();
      assertEquals("\nID Home: \nMorada: \nFornecedor: \nProprietario: \nNIF: 2\n----------------------Divis\u00E3o/Dispositivos----------------------\n----------------------------------------------------------------", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 4, "", "");
      casaInteligente0.numeroDispositivos();
      assertEquals(4, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("U@Dm?", "U@Dm?", 4, "U@Dm?", "U@Dm?");
      // Undeclared exception!
      try { 
        casaInteligente0.setDevice("U@Dm?", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "");
      casaInteligente0.addRoom("");
      casaInteligente0.removeDevicesFromRoom("%:DU`GN{mK4eK:k");
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente0.getProprietario());
      assertEquals("Fornecedor: ", casaInteligente0.getIdHome());
      assertEquals("Fornecedor: ", casaInteligente0.getMorada());
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("", casaInteligente0.getIdFornecedor());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      // Undeclared exception!
      try { 
        casaInteligente0.numeroDispositivosDivisao("R1n;<U2bF$+/F/[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        CasaInteligente.parseCasa("Model.CasaInteligente");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "Fornecedor: ");
      casaInteligente0.removeDeviceFromHome("m5%w{;V");
      assertEquals("Fornecedor: ", casaInteligente0.getIdFornecedor());
      assertEquals("%:DU`GN{mK4eK:k", casaInteligente0.getProprietario());
      assertEquals("Fornecedor: ", casaInteligente0.getMorada());
      assertEquals(0, casaInteligente0.getNIF());
      assertEquals("Fornecedor: ", casaInteligente0.getIdHome());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente(" ?(C?`", "k}CeM;j\"_", 0, " ?(C?`", "eR((Kd>:E~?n}E(");
      assertEquals(" ?(C?`", casaInteligente0.getMorada());
      
      casaInteligente0.setMorada("k}CeM;j\"_");
      assertEquals("k}CeM;j\"_", casaInteligente0.getProprietario());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      casaInteligente0.setallDevices(false);
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("mq", "Model.Exceptions.SmartDeviceAlreadyExistsException", 0, "mq", "Model.Exceptions.SmartDeviceAlreadyExistsException");
      casaInteligente0.addFatura("mq", (LocalDateTime) null, (LocalDateTime) null, 0);
      List<Fatura> list0 = casaInteligente0.getFaturas("mq");
      assertEquals("Model.Exceptions.SmartDeviceAlreadyExistsException", casaInteligente0.getIdFornecedor());
      assertEquals("Model.Exceptions.SmartDeviceAlreadyExistsException", casaInteligente0.getProprietario());
      assertEquals(0, casaInteligente0.getNIF());
      assertFalse(list0.isEmpty());
      assertEquals("mq", casaInteligente0.getIdHome());
      assertEquals("mq", casaInteligente0.getMorada());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      casaInteligente0.setIdHome("");
      assertEquals(2, casaInteligente0.getNIF());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      CasaInteligente casaInteligente0 = null;
      try {
        casaInteligente0 = new CasaInteligente("", "H[/4l4tWK", hashMap0, hashMap1, 9, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("Fornecedor: ", "%:DU`GN{mK4eK:k", 0, "Fornecedor: ", "");
      // Undeclared exception!
      try { 
        casaInteligente0.addDeviceToRoom("%:DU`GN{mK4eK:k", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", "", 2, "", "");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(2, casaInteligente1.getNIF());
      assertEquals(2, casaInteligente0.getNIF());
  }
}
